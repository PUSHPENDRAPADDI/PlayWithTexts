{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","textDecoration","color","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","reverse","arr","i","charAt","slice","filter","element","match","Alert","height","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.068a61e8.chunk.js","sourcesContent":["import React from 'react'\r\n// import { a } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a style={{textDecoration: 'none', color: props.mode === 'dark' ? 'white' : '#042743' }} className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-a\" href=\"/about\">About</a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${props.mode === 'light' ? 'dark' : 'light'} mode `}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Converted to upperCase\",\"success\")\r\n        }\r\n    }\r\n    const handleDownClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Converted to lowerCase\",\"success\")\r\n        }\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Text cleared\",\"success\")\r\n        }\r\n    }\r\n    const handleCopyClick = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Text copied\",\"success\")\r\n        }\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Extra spaces removed\",\"success\")\r\n        }\r\n    }\r\n    const handleTextReverse = () => {\r\n        let newText = text.split(\"\").reverse().join(\"\");\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Text reversed\",\"success\")\r\n        }\r\n    }\r\n    const handleWordReverse = () => {\r\n        let newText = text.split(\" \").reverse().join(\" \");\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Words reversed in text\",\"success\")\r\n        }\r\n    }\r\n    const handleUpperCaseFirst = () => {\r\n        const text2 = text + \" \";\r\n        const arr = text2.split(\" \");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n        const newText = arr.join(\" \");\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Converted to Capitalize\",\"success\")\r\n        }\r\n    }\r\n    const handleRemoveComma = () => {\r\n        const newText = text.split(\",\").join(\"\");\r\n        setText(newText);\r\n        if (text === \"\") {\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }else{\r\n            props.showAlert(\"Commas are removed\",\"success\")\r\n        }\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }} >\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange}\r\n                        style={{ backgroundColor: props.mode === 'dark' ? 'gray' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" rows=\"9\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleUpClick}>Convert To UpperCase</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleDownClick}>Convert To LowerCase</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleClearClick}>Clear text</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleCopyClick}>Copy text</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleTextReverse}>Reverse Text</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleWordReverse}>Reverse Word in Text</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleUpperCaseFirst}>Capitalize First Letter</button>\r\n                <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleRemoveComma}>Remove Comma </button>\r\n            </div>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} charecters</p>\r\n                <h2>Time Require to read</h2>\r\n                <p>{0.008 * text.split(\" \").length} Minutes to Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something in above Box\"}</p>\r\n                <h2>Vowels</h2>\r\n                <p>{(text.match(/[aeiou]/gi) || []).length}</p>\r\n                <h2>Consonent</h2>\r\n                <p>{text.length - (((text.match(/[aeiou]/gi) || []).length) + text.split(\" \").length - 1)}</p>\r\n                <h2>Email Extractor</h2>\r\n                <p>{((text.match(/([a-zA-Z0-9._+-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi) || []).length)}</p>\r\n                <h2>Numbers </h2>\r\n                <p>{(text.match(/[0-9]/gi) || []).length}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>{props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","// import About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./component/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <div className=\"container my-3\">\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n          {/* <Switch>\n            <Route path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route> */}\n              <TextForm showAlert={showAlert} heading=\"Enter your text here\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n      {/* <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route>\n              <TextForm showAlert={showAlert} heading=\"Enter your text here\" mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}